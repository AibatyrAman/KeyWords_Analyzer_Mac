{"ast":null,"code":"import React from'react';import{Dialog,DialogTitle,DialogContent,DialogActions,Button,Table,TableBody,TableCell,TableContainer,TableHead,TableRow,Paper,Typography,Box,Chip}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const MatchedKeywordsDialog=_ref=>{let{open,onClose,title,subtitle,originalData}=_ref;const findMatchingKeywords=()=>{const titleWords=new Set((title===null||title===void 0?void 0:title.toLowerCase().split(/\\s+/))||[]);const subtitleWords=new Set((subtitle===null||subtitle===void 0?void 0:subtitle.toLowerCase().split(/\\s+/))||[]);const combinedWords=new Set(Array.from(titleWords).concat(Array.from(subtitleWords)));const matchedKeywords=[];originalData.forEach(row=>{const keywordWords=new Set(row.Keyword.toLowerCase().split(/\\s+/));// Check if all keyword words are in combined words\nconst isMatch=Array.from(keywordWords).every(word=>Array.from(combinedWords).some(combinedWord=>combinedWord.includes(word)||word.includes(combinedWord)));if(isMatch){matchedKeywords.push({keyword:row.Keyword,volume:row.Volume,difficulty:row.Difficulty});}});return matchedKeywords.sort((a,b)=>b.volume-a.volume);};const matchedKeywords=findMatchingKeywords();return/*#__PURE__*/_jsxs(Dialog,{open:open,onClose:onClose,maxWidth:\"md\",fullWidth:true,children:[/*#__PURE__*/_jsxs(DialogTitle,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",gutterBottom:true,children:\"E\\u015Fle\\u015Fen Anahtar Kelimeler\"}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"subtitle1\",fontWeight:\"bold\",children:title}),/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",children:subtitle})]})]}),/*#__PURE__*/_jsx(DialogContent,{children:matchedKeywords.length===0?/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"text.secondary\",sx:{fontStyle:'italic'},children:\"Bu Title ve Subtitle i\\xE7in e\\u015Fle\\u015Fen anahtar kelime bulunamad\\u0131.\"}):/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsxs(Box,{sx:{mb:2,display:'flex',gap:1,alignItems:'center'},children:[/*#__PURE__*/_jsx(Chip,{label:`${matchedKeywords.length} eşleşen kelime`,color:\"primary\",size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:`Toplam Volume: ${matchedKeywords.reduce((sum,kw)=>sum+kw.volume,0).toLocaleString()}`,color:\"secondary\",size:\"small\"}),/*#__PURE__*/_jsx(Chip,{label:`Ortalama Difficulty: ${(matchedKeywords.reduce((sum,kw)=>sum+kw.difficulty,0)/matchedKeywords.length).toFixed(2)}`,variant:\"outlined\",size:\"small\"})]}),/*#__PURE__*/_jsx(TableContainer,{component:Paper,variant:\"outlined\",children:/*#__PURE__*/_jsxs(Table,{size:\"small\",children:[/*#__PURE__*/_jsx(TableHead,{children:/*#__PURE__*/_jsxs(TableRow,{children:[/*#__PURE__*/_jsx(TableCell,{sx:{fontWeight:'bold'},children:\"Anahtar Kelime\"}),/*#__PURE__*/_jsx(TableCell,{sx:{fontWeight:'bold'},align:\"right\",children:\"Volume\"}),/*#__PURE__*/_jsx(TableCell,{sx:{fontWeight:'bold'},align:\"right\",children:\"Difficulty\"})]})}),/*#__PURE__*/_jsx(TableBody,{children:matchedKeywords.map((keyword,index)=>/*#__PURE__*/_jsxs(TableRow,{hover:true,children:[/*#__PURE__*/_jsx(TableCell,{children:keyword.keyword}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:keyword.volume.toLocaleString()}),/*#__PURE__*/_jsx(TableCell,{align:\"right\",children:keyword.difficulty})]},index))})]})})]})}),/*#__PURE__*/_jsx(DialogActions,{children:/*#__PURE__*/_jsx(Button,{onClick:onClose,children:\"Kapat\"})})]});};","map":{"version":3,"names":["React","Dialog","DialogTitle","DialogContent","DialogActions","Button","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","Chip","jsx","_jsx","jsxs","_jsxs","MatchedKeywordsDialog","_ref","open","onClose","title","subtitle","originalData","findMatchingKeywords","titleWords","Set","toLowerCase","split","subtitleWords","combinedWords","Array","from","concat","matchedKeywords","forEach","row","keywordWords","Keyword","isMatch","every","word","some","combinedWord","includes","push","keyword","volume","Volume","difficulty","Difficulty","sort","a","b","maxWidth","fullWidth","children","variant","gutterBottom","fontWeight","color","length","sx","fontStyle","mb","display","gap","alignItems","label","size","reduce","sum","kw","toLocaleString","toFixed","component","align","map","index","hover","onClick"],"sources":["/Users/aibatyr/Documents/GitHub/KeyWords_Analyzer_Web/Keyword_Analyzer_Web/src/components/MatchedKeywordsDialog.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogActions,\n  Button,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n  Paper,\n  Typography,\n  Box,\n  Chip,\n} from '@mui/material';\nimport { KeywordData } from '../types';\n\ninterface MatchedKeyword {\n  keyword: string;\n  volume: number;\n  difficulty: number;\n}\n\ninterface MatchedKeywordsDialogProps {\n  open: boolean;\n  onClose: () => void;\n  title: string;\n  subtitle: string;\n  originalData: KeywordData[];\n}\n\nexport const MatchedKeywordsDialog: React.FC<MatchedKeywordsDialogProps> = ({\n  open,\n  onClose,\n  title,\n  subtitle,\n  originalData,\n}) => {\n  const findMatchingKeywords = (): MatchedKeyword[] => {\n    const titleWords = new Set(title?.toLowerCase().split(/\\s+/) || []);\n    const subtitleWords = new Set(subtitle?.toLowerCase().split(/\\s+/) || []);\n    const combinedWords = new Set(Array.from(titleWords).concat(Array.from(subtitleWords)));\n    \n    const matchedKeywords: MatchedKeyword[] = [];\n    \n    originalData.forEach(row => {\n      const keywordWords = new Set(row.Keyword.toLowerCase().split(/\\s+/));\n      \n      // Check if all keyword words are in combined words\n      const isMatch = Array.from(keywordWords).every(word => \n        Array.from(combinedWords).some(combinedWord => \n          combinedWord.includes(word) || word.includes(combinedWord)\n        )\n      );\n      \n      if (isMatch) {\n        matchedKeywords.push({\n          keyword: row.Keyword,\n          volume: row.Volume,\n          difficulty: row.Difficulty\n        });\n      }\n    });\n    \n    return matchedKeywords.sort((a, b) => b.volume - a.volume);\n  };\n\n  const matchedKeywords = findMatchingKeywords();\n\n  return (\n    <Dialog\n      open={open}\n      onClose={onClose}\n      maxWidth=\"md\"\n      fullWidth\n    >\n      <DialogTitle>\n        <Typography variant=\"h6\" gutterBottom>\n          Eşleşen Anahtar Kelimeler\n        </Typography>\n        <Box>\n          <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n            {title}\n          </Typography>\n          <Typography variant=\"body2\" color=\"text.secondary\">\n            {subtitle}\n          </Typography>\n        </Box>\n      </DialogTitle>\n      \n      <DialogContent>\n        {matchedKeywords.length === 0 ? (\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ fontStyle: 'italic' }}>\n            Bu Title ve Subtitle için eşleşen anahtar kelime bulunamadı.\n          </Typography>\n        ) : (\n          <Box>\n            <Box sx={{ mb: 2, display: 'flex', gap: 1, alignItems: 'center' }}>\n              <Chip \n                label={`${matchedKeywords.length} eşleşen kelime`} \n                color=\"primary\" \n                size=\"small\" \n              />\n              <Chip \n                label={`Toplam Volume: ${matchedKeywords.reduce((sum, kw) => sum + kw.volume, 0).toLocaleString()}`} \n                color=\"secondary\" \n                size=\"small\" \n              />\n              <Chip \n                label={`Ortalama Difficulty: ${(matchedKeywords.reduce((sum, kw) => sum + kw.difficulty, 0) / matchedKeywords.length).toFixed(2)}`} \n                variant=\"outlined\" \n                size=\"small\" \n              />\n            </Box>\n            \n            <TableContainer component={Paper} variant=\"outlined\">\n              <Table size=\"small\">\n                <TableHead>\n                  <TableRow>\n                    <TableCell sx={{ fontWeight: 'bold' }}>Anahtar Kelime</TableCell>\n                    <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">Volume</TableCell>\n                    <TableCell sx={{ fontWeight: 'bold' }} align=\"right\">Difficulty</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {matchedKeywords.map((keyword, index) => (\n                    <TableRow key={index} hover>\n                      <TableCell>{keyword.keyword}</TableCell>\n                      <TableCell align=\"right\">{keyword.volume.toLocaleString()}</TableCell>\n                      <TableCell align=\"right\">{keyword.difficulty}</TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Box>\n        )}\n      </DialogContent>\n      \n      <DialogActions>\n        <Button onClick={onClose}>Kapat</Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}